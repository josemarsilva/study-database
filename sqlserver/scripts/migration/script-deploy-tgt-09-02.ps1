## ############################################################################
## filename: script-deploy-tgt-09-02.ps1
## purpose : Script import Tab-Separated-Values (.tsv) file from Source and Target
## revision: 2024-02-06 16:45 - josemarsilva - 
## remarks : 
##          * Parameters[]:
## ############################################################################

# Get (.tsv) files to import: source and target
$a_tsvFiles = @(
    [tuple]::Create("source", "script-deploy-src-15-01_{deploy_database}.tsv"),
    [tuple]::Create("target", "script-deploy-tgt-07-01_{deploy_database}.tsv")
)

# Clear file
$sqlscriptfilename = "script-deploy-tgt-09-03.sql"
Remove-Item -Path $sqlscriptfilename

# Build new (.sql) script with Tsv INSERT scripts
Set-Content -Path $sqlscriptfilename -Value "--"
Add-Content -Path $sqlscriptfilename -Value "-- script-deploy-tgt-09-03.sql: Dynamically generated by script-deploy-tgt-08-02.ps1"
Add-Content -Path $sqlscriptfilename -Value "--"
Add-Content -Path $sqlscriptfilename -Value ""
Add-Content -Path $sqlscriptfilename -Value "--"
Add-Content -Path $sqlscriptfilename -Value "-- Step#01: USE {deploy_database} - Replaced by current deploy database"
Add-Content -Path $sqlscriptfilename -Value "--"
Add-Content -Path $sqlscriptfilename -Value "USE {deploy_database}"
Add-Content -Path $sqlscriptfilename -Value ""


# Loop files to import
foreach ($tsvFile in $a_tsvFiles) {

    # Iteration
    Write-Output "Generating '$($tsvFile.Item1)' import script for object list in '$($tsvFile.Item2)' ..."

    # Test tsv File exists ?
    if (Test-Path $tsvFile.Item2) {

        # Get data content from tsv file
        $content = Get-Content $tsvFile.Item2
        $dataTsvFile = $content | ConvertFrom-Csv -Delimiter "`t"    

        # Loop rows from Data Tsv File
        foreach ($row in $dataTsvFile) {

            # Prepare insert values
            Add-Content -Path $sqlscriptfilename -Value ""
            Add-Content -Path $sqlscriptfilename -Value "-- $($tsvFile.Item1)"
            Add-Content -Path $sqlscriptfilename -Value ""

            $source_target = $tsvFile.Item1
            if ($source_target -ne $null) {
                $source_target = $source_target.Replace("'", "")
            } else {
                $source_target = "NULL"
            }
        
            $server_name = $row.server_name
            if ($server_name -ne $null) {
                $server_name = $server_name.Replace("'", "")
            } else {
                $server_name = "NULL"
            }
        
            $database_name = $row.database_name
            if ($database_name -ne $null) {
                $database_name = $database_name.Replace("'", "")
            } else {
                $database_name = "NULL"
            }
        
            $schema_name = $row.schema_name
            if ($schema_name -ne $null) {
                $schema_name = $schema_name.Replace("'", "")
            } else {
                $schema_name = "NULL"
            }
        
            $object_name = $row.object_name
            if ($object_name -ne $null) {
                $object_name = $object_name.Replace("'", "")
            } else {
                $object_name = "NULL"
            }
        
            $object_type_desc = $row.object_type_desc
            if ($object_type_desc -ne $null) {
                $object_type_desc = $object_type_desc.Replace("'", "")
            } else {
                $object_type_desc = "NULL"
            }
        
            $create_date = $row.create_date
            if ($create_date -ne $null) {
                $create_date = $create_date.Replace("'", "")
            } else {
                $create_date = ""
            }
        
            $modify_date = $row.modify_date
            if ($modify_date -ne $null) {
                $modify_date = $modify_date.Replace("'", "")
            } else {
                $modify_date = ""
            }
        
            $property_int = $row.property_int
            if ($property_int -ne $null) {
                $property_int = $property_int.Replace("'", "")
            } else {
                $property_int = "NULL"
            }
        
            $property_varchar = $row.property_varchar
            if ($property_varchar -ne $null) {
                $property_varchar = $property_varchar.Replace("'", "")
            } else {
                $property_varchar = "NULL"
            }
        
            # Transform Tsv rows into SQL script
            Add-Content -Path $sqlscriptfilename -Value "INSERT INTO migration_results (source_target, server_name, database_name, schema_name, object_name, object_type_desc, create_date, modify_date, property_int, property_varchar) VALUES ('$source_target', '$server_name', '$database_name', '$schema_name', '$object_name', '$object_type_desc', '$create_date', '$modify_date', '$property_int', '$property_varchar')"

        } 
    } else {
        Write-Output "Warning: File '$($tsvFile.Item2)' does not exists! Skipping importing ..."
    }

    Add-Content -Path $sqlscriptfilename -Value ""
    Add-Content -Path $sqlscriptfilename -Value "GO"
    Add-Content -Path $sqlscriptfilename -Value ""

}
